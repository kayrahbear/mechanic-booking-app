# Cloud Build pipeline  (v1 format)
substitutions:
  _REGION: us-central1    # change if you move regions

options:
  logging: CLOUD_LOGGING_ONLY

steps:
###############################################################################
# 1  Build & push backend container
###############################################################################
- id: backend-build
  name: gcr.io/cloud-builders/docker
  dir: backend
  args: [
    'build','-t',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA',
    '.'
  ]

- id: backend-push
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA'
  ]

###############################################################################
# 2  Build & push frontend container
###############################################################################

# Add a step to fetch Firebase config from Secret Manager
- id: fetch-firebase-config
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      echo "Fetching Firebase config from Secret Manager..."
      gcloud secrets versions access latest --secret=firebase-web-config --project=$PROJECT_ID > frontend/.env.local
      echo "Firebase config fetched successfully"

- id: frontend-build
  name: gcr.io/cloud-builders/docker
  dir: frontend
  args: [
    'build','-t',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA',
    '.'
  ]

- id: frontend-push
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA'
  ]

###############################################################################
# 3  Build & push worker container
###############################################################################
- id: worker-build
  name: gcr.io/cloud-builders/docker
  dir: backend/worker
  args: [
    'build','-t',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/worker:$SHORT_SHA',
    '.'
  ]

- id: worker-push
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/worker:$SHORT_SHA'
  ]

###############################################################################
# 4  Terraform apply (infra changes)
###############################################################################
- id: terraform-apply
  name: hashicorp/terraform:light          # alpine image with terraform only
  dir: infra
  entrypoint: /bin/sh                      # <— key fix: run shell, not terraform
  env:
    - GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=terraform-sa@$PROJECT_ID.iam.gserviceaccount.com
  args:
    - -c
    - |
      echo "Debugging directory structure:"
      ls -la /workspace
      ls -la /workspace/infra
      ls -la /workspace/infra/scripts || echo "Scripts directory not found!"
      
      if [ -f "/workspace/infra/scripts/terraform-cloudbuild.sh" ]; then
        echo "Script exists, making executable"
        chmod +x /workspace/infra/scripts/terraform-cloudbuild.sh
        echo "Running script with sh"
        sh /workspace/infra/scripts/terraform-cloudbuild.sh "$PROJECT_ID" "${_REGION}" "$SHORT_SHA" "${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com"
      else
        echo "Trying with relative path..."
        pwd
        ls -la
        ls -la scripts || echo "Local scripts directory not found!"
        
        if [ -f "scripts/terraform-cloudbuild.sh" ]; then
          chmod +x scripts/terraform-cloudbuild.sh
          ./scripts/terraform-cloudbuild.sh "$PROJECT_ID" "${_REGION}" "$SHORT_SHA" "${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com"
        else
          echo "ERROR: terraform-cloudbuild.sh not found in any location!"
          exit 1
        fi
      fi

###############################################################################
# (optional) Slack / webhook notifier
###############################################################################
# - id: notify
#   name: curlimages/curl
#   entrypoint: curl
#   args: ['-X','POST','https://hooks.slack.com/services/…']

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA'
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA'
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/worker:$SHORT_SHA'

timeout: 1800s   # 30 minutes
