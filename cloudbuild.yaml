# Cloud Build pipeline  (v1 format)
substitutions:
  _REGION: us-central1    # change if you move regions

options:
  logging: CLOUD_LOGGING_ONLY

steps:
###############################################################################
# 1  Build & push backend container
###############################################################################
- id: backend-build
  name: gcr.io/cloud-builders/docker
  dir: backend
  args: [
    'build','-t',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA',
    '.'
  ]

- id: backend-push
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA'
  ]

###############################################################################
# 2  Build & push frontend container
###############################################################################
- id: frontend-build
  name: gcr.io/cloud-builders/docker
  dir: frontend
  args: [
    'build','-t',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA',
    '.'
  ]

- id: frontend-push
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA'
  ]

###############################################################################
# 3  Terraform apply (infra changes)
###############################################################################
- id: terraform-apply
  name: hashicorp/terraform:light          # alpine image with terraform only
  dir: infra
  entrypoint: /bin/sh                      # <— key fix: run shell, not terraform
  env:
    - GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=terraform-sa@$PROJECT_ID.iam.gserviceaccount.com
  args:
    - -c
    - |
      terraform init \
        -backend-config="bucket=tfstate-${PROJECT_ID}" \
        -backend-config="prefix=live"

      # Import existing resources
      terraform import google_firestore_database.default "projects/${PROJECT_ID}/databases/(default)"
      terraform import module.queue.google_cloud_tasks_queue.notifications "projects/${PROJECT_ID}/locations/${_REGION}/queues/notification-tasks"
      terraform import module.secrets.google_secret_manager_secret.this["SENDGRID_KEY"] "projects/${PROJECT_ID}/secrets/SENDGRID_KEY"
      terraform import module.secrets.google_secret_manager_secret.this["TWILIO_SID"] "projects/${PROJECT_ID}/secrets/TWILIO_SID"
      terraform import module.secrets.google_secret_manager_secret.this["STRIPE_SK"] "projects/${PROJECT_ID}/secrets/STRIPE_SK"

      # Apply changes
      terraform apply -auto-approve -input=false \
        -var="project_id=${PROJECT_ID}" \
        -var="region=${_REGION}" \
        -var="image_tag=${SHORT_SHA}" \
        -var="cloud_build_sa=${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com"

###############################################################################
# (optional) Slack / webhook notifier
###############################################################################
# - id: notify
#   name: curlimages/curl
#   entrypoint: curl
#   args: ['-X','POST','https://hooks.slack.com/services/…']

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend:$SHORT_SHA'
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend:$SHORT_SHA'

timeout: 1800s   # 30 minutes
